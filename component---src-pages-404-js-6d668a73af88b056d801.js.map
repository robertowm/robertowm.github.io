{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","description","pathname","reactstrap__WEBPACK_IMPORTED_MODULE_2__","class","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","image","article","gatsby__WEBPACK_IMPORTED_MODULE_5__","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","react__WEBPACK_IMPORTED_MODULE_2___default","a","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","property","_public_static_d_3972928183_json__WEBPACK_IMPORTED_MODULE_1__","bool","defaultProps","Header","_this","_Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","siteTitle","NavLink","to","className","style","core_browser_esm","gatsby_browser_entry","assign","color","textDecoration","Navbar","expand","dark","backgroundColor","Container","whiteSpace","overflow","textOverflow","NavbarToggler","onClick","Collapse","navbar","Nav","css","header_ref","NavItem","Component","Main","styled_base_browser_esm","target","styles","Layout","react_default","Helmet_default","meta","lang","header","_2269548548","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-404-js-6d668a73af88b056d801.js","sourcesContent":["import React from 'react'\nimport { Container } from 'reactstrap'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO\n      title={'Not Found'}\n      description={`This page doesn't exist.`}\n      pathname={'/404'}\n    />\n    <Container class=\"fluid\">\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Container>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst query = graphql`\n  query SeoQuery {\n    site {\n      siteMetadata {\n        defaultTitle\n        titleTemplate\n        defaultDescription\n        siteUrl\n        defaultImage\n        twitterUsername\n      }\n    }\n  }\n`\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n          twitterUsername,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${image || defaultImage}`,\n        url: `${siteUrl}${pathname || \"/\"}`,\n      }\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n              <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n              <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport {\n  Container,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  Collapse,\n} from 'reactstrap'\nimport { css } from '@emotion/core'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n\n  render() {\n    const { siteTitle } = this.props\n    const NavLink = ({ to, name, className, style }) => (\n      <Link\n        to={to}\n        style={{ color: 'white', textDecoration: 'none', ...style }}\n        className={`nav-link ${className}`}\n      >\n        {name}\n      </Link>\n    )\n\n    return (\n      <Navbar\n        expand=\"sm\"\n        dark\n        className=\"sticky-top\"\n        style={{ backgroundColor: 'rebeccapurple' }}\n      >\n        <Container>\n            <Link\n              to=\"/\"\n              className={\"navbar-brand\"}\n              style={{\n                color: 'white',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n              }}\n            >\n              {siteTitle}\n            </Link>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar css={css`li { margin-bottom: 0; }`}>\n              <NavItem>\n                <NavLink to=\"/\" name=\"About me\" />\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/blog\" name=\"Blog\" />\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport Header from './header'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './layout.css'\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        defaultTitle\n        titleTemplate\n        defaultDescription\n      }\n    }\n  }\n`\n\nconst Main = styled.div`\n  padding-top: 5px;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: { defaultTitle, titleTemplate, defaultDescription },\n      },\n    }) => (\n        <>\n          <Helmet\n            title={defaultTitle} titleTemplate={titleTemplate}\n            meta={[\n              { name: 'description', content: defaultDescription },\n            ]}\n          >\n            <html lang=\"en\" />\n          </Helmet>\n          <Header siteTitle={defaultTitle} />\n          <Main>{children}</Main>\n        </>\n      )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}