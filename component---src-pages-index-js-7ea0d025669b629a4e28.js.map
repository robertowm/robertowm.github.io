{"version":3,"sources":["webpack:///./src/templates/BlogPostTemplate.js","webpack:///./src/components/icon.js","webpack:///./src/templates/WorkExperiencesTemplate.js","webpack:///./src/templates/AboutMeTemplate.js","webpack:///./src/components/date.js","webpack:///./src/templates/QualificationsTemplate.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/block.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/breadcrumb.js","webpack:///./src/templates/ProjectsTemplate.js"],"names":["OneLineBlogPostTemplate","_ref","_ref$node","node","fields","frontmatter","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","className","css","blockCss","Date","date","toDateString","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","path","title","tags","map","tag","reactstrap__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","_ref2","content","data","markdownRemark","_content$frontmatter","html","excerpt","breadcrumb","breadcrumbGenerator","label","_components_layout__WEBPACK_IMPORTED_MODULE_8__","_components_seo__WEBPACK_IMPORTED_MODULE_7__","description","pathname","article","reactstrap__WEBPACK_IMPORTED_MODULE_4__","class","reactstrap__WEBPACK_IMPORTED_MODULE_5__","style","fontSize","reactstrap__WEBPACK_IMPORTED_MODULE_6__","_components_block__WEBPACK_IMPORTED_MODULE_9__","body","query","library","add","faGithub","faLinkedin","faAngleDoubleUp","faFilePdf","faEnvelope","faMapMarkerAlt","faChevronCircleUp","faChevronCircleDown","obj","IconList","styled_base_browser_esm","target","name","styles","IconLink","props","backgroundColor","BaseIcon","icon","color","core_browser_esm","index_es","assign","Wrapper","Icon","children","icon_BaseIcon","margin","ClicableIcon","_ref3","url","onClick","href","mapNameToIcon","Error","AboutMeTemplate","fullName","address","email","cvUrl","photo","links","Row","Col","lg","md","gatsby_image_default","a","fluid","alt","dangerouslySetInnerHTML","__html","sm","xs","index","icon_ClicableIcon","key","icon_Icon","DateRange","begin","end","isNaN","parseInt","QualificationsTemplate","education","certifications","react_default","Fragment","institution","start_year","end_year","date_DateRange","_ref4","institutions","elem","processor","Remark","use","processSync","toString","WorkExperience","_this","_Component","call","this","toggle","bind","assertThisInitialized_default","state","collapse","setState","render","_this$props","position","company","summary","startYear","endYear","text","hasSummary","trim","length","_summary$split","split","mainSummary","expandableSummary","slice","cursor","fontFamily","Collapse","isOpen","block","join","Component","WorkExperiencesTemplate","parsedEntries","entries","WorkExperiencesTemplate_WorkExperience","IndexPage","aboutMeData","aboutMe","layout","seo","Container","full_name","profileUrl","profile_url","cv_url","childImageSharp","latestBlogPost","totalCount","BlogPostTemplate","_","first","edges","workExperiences","work_experience","ProjectsTemplate","projects","qualifications","StaticQueryContext","React","createContext","StaticQuery","Consumer","staticQueryData","propTypes","PropTypes","object","string","isRequired","func","HtmlBlock","id","m","module","exports","require","default","SEO","image","gatsby__WEBPACK_IMPORTED_MODULE_5__","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","property","_public_static_d_3972928183_json__WEBPACK_IMPORTED_MODULE_1__","bool","defaultProps","Header","siteTitle","NavLink","gatsby_browser_entry","textDecoration","Navbar","expand","dark","whiteSpace","overflow","textOverflow","NavbarToggler","navbar","Nav","header_ref","NavItem","Main","Layout","Helmet_default","meta","lang","header","_2269548548","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","createElement","InternalPageRenderer","json","shape","Breadcrumb","BreadcrumbItem","BreadcrumbActiveItem","active","items","filter","item","ProjectSummary","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4___default","thumbnail","_emotion_core__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","gatsby_image__WEBPACK_IMPORTED_MODULE_11___default","gatsby__WEBPACK_IMPORTED_MODULE_10__","short_name"],"mappings":"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","file":"component---src-pages-index-js-7ea0d025669b629a4e28.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { Container, Row, Col, Badge } from 'reactstrap'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport { blockCss, HtmlBlock } from '../components/block'\nimport { breadcrumbGenerator } from '../components/breadcrumb'\n\nexport const OneLineBlogPostTemplate = ({ node: { fields, frontmatter } }) => (\n  <div className=\"px-3 pt-2 mt-2\" css={blockCss}>\n    <h6>\n      <span className=\"mr-2\">\n        Latest post ({new Date(frontmatter.date).toDateString()}):\n      </span>\n      <Link to={fields.path}>\n        {frontmatter.title}{' '}\n        {frontmatter.tags.map(tag => (\n          <Badge className=\"mx-1\">{tag}</Badge>\n        ))}\n      </Link>\n    </h6>\n  </div>\n)\n\nexport default ({ data: { markdownRemark: content } }) => {\n  const { title, date, tags } = content.frontmatter\n  const { html, excerpt } = content\n  const breadcrumb = breadcrumbGenerator(title, [\n    { to: '/', label: 'Home' },\n    { to: '/blog/', label: 'Blog' },\n  ])\n\n  return (\n    <Layout>\n      <SEO\n        title={`Post ${title}`}\n        description={excerpt}\n        pathname={content.fields.path}\n        article\n      />\n      <Container class=\"fluid\">\n        {breadcrumb}\n\n        <div className=\"p-3 mt-2\" css={blockCss}>\n          <Row style={{ fontSize: '14px' }}>\n            <Col>\n              <h1>{title}</h1>\n              <h6>Published at {new Date(date).toDateString()}</h6>\n              <h6>\n                Tags:{' '}\n                {tags.map(tag => (\n                  <Badge className=\"mx-1\">{tag}</Badge>\n                ))}\n              </h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <HtmlBlock body={html} />\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostPageTemplate($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      excerpt\n      fields {\n        path\n      }\n      frontmatter {\n        title\n        date\n        tags\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport styled from '@emotion/styled'\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport {\n  faAngleDoubleUp,\n  faFilePdf,\n  faEnvelope,\n  faMapMarkerAlt,\n  faChevronCircleUp,\n  faChevronCircleDown,\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(\n  faGithub,\n  faLinkedin,\n  faAngleDoubleUp,\n  faFilePdf,\n  faEnvelope,\n  faMapMarkerAlt,\n  faChevronCircleUp,\n  faChevronCircleDown\n)\n\nexport const IconList = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nexport const IconLink = styled.a`\n  height: 32px;\n  width: 32px;\n  min-width: 32px;\n  background-color: ${props => props.backgroundColor || 'rebeccapurple'};\n  border-radius: 50%;\n  padding: 0px;\n  margin: 0 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst BaseIcon = ({ icon, color, style }) => (\n  <FontAwesomeIcon\n    style={{ ...style, fontSize: '20px', color: color }}\n    icon={icon}\n  />\n)\n\nconst Wrapper = styled.div`\n  background-color: ${props => props.backgroundColor || 'white'};\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  min-height: 32px;\n  width: 100%;\n`\n\nexport const Icon = ({ icon, children, className, backgroundColor, color }) => (\n  <Wrapper className={className} backgroundColor={backgroundColor}>\n    <BaseIcon\n      icon={icon}\n      color={color || 'rebeccapurple'}\n      style={{ margin: '5px' }}\n    />\n    {children}\n  </Wrapper>\n)\n\nexport const ClicableIcon = ({\n  icon,\n  url,\n  onClick,\n  backgroundColor,\n  color,\n}) => (\n  <IconLink href={url} onClick={onClick} backgroundColor={backgroundColor}>\n    <BaseIcon icon={icon} color={color || 'white'} />\n  </IconLink>\n)\n","import React, { Component } from 'react'\nimport { Row, Col, Collapse } from 'reactstrap'\nimport Remark from 'remark'\nimport html from 'remark-html'\nimport { blockCss, HtmlBlock } from '../components/block'\nimport { DateRange } from '../components/date'\n\nconst processor = (function() {\n  const obj = new Remark().use(html)\n  return elem => obj.processSync(elem).toString()\n})()\n\nclass WorkExperience extends Component {\n  constructor(props) {\n    super(props)\n    this.toggle = this.toggle.bind(this)\n    this.state = { collapse: false }\n  }\n\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n\n  render() {\n    const { position, company, url, summary, startYear, endYear } = this.props\n    const processor = this.props.processor || (text => text)\n    const hasSummary = summary && summary.trim().length > 0\n    const [mainSummary, ...expandableSummary] = summary.split('\\n')\n\n    return (\n      <>\n        <Row style={{ fontSize: '14px' }}>\n          <Col md=\"9\" sm=\"12\">\n            {position.split('&').map(elem => (\n              <div className=\"font-weight-bold\">{elem.trim()}</div>\n            ))}\n            <div>\n              <a style={{ color: 'black' }} href={url}>\n                {company}\n              </a>\n            </div>\n          </Col>\n          <Col md=\"3\" sm=\"12\">\n            <DateRange\n              className=\"text-md-right\"\n              begin={startYear}\n              end={endYear}\n            />\n          </Col>\n        </Row>\n        {hasSummary &&\n          <div className=\"d-none d-md-block\" style={{ fontSize: '13px' }}>\n            <p>\n              {mainSummary}\n              &nbsp;\n              <a\n                onClick={this.toggle}\n                style={{ cursor: 'pointer', fontFamily: 'monospace' }}\n              >\n                [{this.state.collapse ? '-' : '+'}]\n              </a>\n            </p>\n            <Collapse isOpen={this.state.collapse}>\n              <HtmlBlock body={processor(expandableSummary.join('\\n'))} />\n            </Collapse>\n          </div>\n        }\n        {!hasSummary && <p></p>}\n      </>\n    )\n  }\n}\n\nexport default ({ entries }) => {\n  const parsedEntries = entries.map(\n    ({ position, company, url, summary, start_year, end_year }, index) => (\n      <WorkExperience\n        key={index}\n        position={position}\n        company={company}\n        url={url}\n        summary={summary}\n        startYear={start_year}\n        endYear={end_year}\n        processor={processor}\n      />\n    )\n  )\n\n  return (\n    <div className=\"p-3 mt-2\" css={blockCss}>\n      <h4>Work experience</h4>\n      {parsedEntries}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { IconList, ClicableIcon, Icon } from '../components/icon'\nimport { blockCss } from '../components/block'\nimport Img from 'gatsby-image'\n\nconst mapNameToIcon = name => {\n  if (name === 'GitHub') return ['fab', 'github']\n  if (name === 'LinkedIn') return ['fab', 'linkedin']\n  if (name === 'Your Acclaim') return 'angle-double-up'\n  if (name === 'PDF') return 'file-pdf'\n  if (name === 'Email') return 'envelope'\n  throw new Error('Invalid name for icon')\n}\n\nexport default ({ fullName, body, address, email, cvUrl, photo, links }) => {\n  return (\n    <div className=\"p-3\" css={blockCss}>\n      <Row className=\"px-md-1\">\n        <Col lg=\"3\" md=\"4\" className=\"text-center mb-3\">\n          <Img\n            fluid={photo.fluid}\n            className=\"rounded img-thumbnail\"\n            alt={fullName}\n          />\n        </Col>\n        <Col lg=\"9\" md=\"8\">\n          <div\n            className=\"text-left text-md-justify\"\n            dangerouslySetInnerHTML={{ __html: body }}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\" className=\"my-2\">\n          <IconList>\n            {links.map(({ name, url }, index) => (\n              <ClicableIcon url={url} icon={mapNameToIcon(name)} key={index} />\n            ))}\n            <ClicableIcon url={cvUrl} icon={mapNameToIcon('PDF')} />\n            <ClicableIcon\n              url={'mailto:' + email}\n              icon={mapNameToIcon('Email')}\n            />\n          </IconList>\n        </Col>\n        <Col lg=\"9\" md=\"8\" sm=\"6\" xs=\"12\" className=\"my-2\">\n          <Icon\n            className=\"justify-content-center justify-content-md-start\"\n            icon=\"map-marker-alt\"\n          >\n            {address}\n          </Icon>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const DateRange = ({ begin, end, className }) => {\n  const content = !end || isNaN(parseInt(end))\n    ? `Since ${begin}`\n    : begin === end\n    ? begin\n    : `${begin} - ${end}`\n  return <div className={className}>({content})</div>\n}\n","import React from 'react'\nimport { blockCss } from '../components/block'\nimport { DateRange } from '../components/date'\n\nexport default ({ education, certifications }) => {\n  const Entry = ({ title, children }) => (\n    <div style={{ fontSize: '14px' }}>\n      <div className=\"font-weight-bold\">{title}</div>\n      {children}\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"p-3 my-2\" css={blockCss}>\n        <h4>Education</h4>\n        {education.map(({ title, institution, start_year, end_year }) => (\n          <div style={{ fontSize: '14px' }}>\n            <div className=\"font-weight-bold\">{title}</div>\n            <div>{institution}</div>\n            <DateRange begin={start_year} end={end_year} />\n          </div>\n        ))}\n      </div>\n      <div className=\"p-3 my-2\" css={blockCss}>\n        <h4>Most relevant certifications</h4>\n        {certifications.map(({ name, institutions, url, date }) => (\n          <div style={{ fontSize: '14px' }}>\n            <a href={url} style={{ color: 'black' }}>\n              <div className=\"font-weight-bold\">{name}</div>\n            </a>\n            {institutions.map(elem => (\n              <div>{elem}</div>\n            ))}\n            <div>{date}</div>\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { Container, Row, Col } from 'reactstrap'\nimport _ from 'lodash'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\n\nimport AboutMeTemplate from '../templates/AboutMeTemplate'\nimport QualificationsTemplate from '../templates/QualificationsTemplate'\nimport WorkExperiencesTemplate from '../templates/WorkExperiencesTemplate'\nimport ProjectsTemplate from '../templates/ProjectsTemplate'\nimport { OneLineBlogPostTemplate } from '../templates/BlogPostTemplate'\n\nconst IndexPage = ({ data }) => {\n  const aboutMeData = data.aboutMe.frontmatter\n  return (\n    <Layout>\n      <SEO />\n      <Container class=\"fluid\">\n        <AboutMeTemplate\n          fullName={aboutMeData.full_name}\n          body={data.aboutMe.html}\n          address={aboutMeData.address}\n          email={aboutMeData.email}\n          profileUrl={aboutMeData.profile_url}\n          cvUrl={aboutMeData.cv_url}\n          photo={aboutMeData.photo.childImageSharp}\n          links={aboutMeData.links}\n        />\n\n        {data.latestBlogPost.totalCount > 0 && (\n          <OneLineBlogPostTemplate\n            node={_.first(data.latestBlogPost.edges).node}\n          />\n        )}\n\n        <Row className=\"no-gutters\">\n          <Col md=\"7\" sm=\"12\" className=\"pr-md-2\">\n            <WorkExperiencesTemplate\n              entries={data.workExperiences.frontmatter.work_experience}\n            />\n            <ProjectsTemplate entries={data.projects.edges} />\n          </Col>\n          <Col md=\"5\" sm=\"12\">\n            <QualificationsTemplate\n              education={data.qualifications.frontmatter.education}\n              certifications={data.qualifications.frontmatter.certifications}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query IndexPageTemplate {\n    aboutMe: markdownRemark(frontmatter: { layout: { eq: \"about-me\" } }) {\n      html\n      frontmatter {\n        full_name\n        address\n        email\n        profile_url\n        cv\n        photo {\n          childImageSharp {\n            fluid(maxWidth: 300, quality: 100) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        links {\n          name\n          url\n        }\n      }\n    }\n    qualifications: markdownRemark(\n      frontmatter: { layout: { eq: \"qualifications\" } }\n    ) {\n      frontmatter {\n        education {\n          title\n          institution\n          start_year\n          end_year\n        }\n        certifications {\n          name\n          institutions\n          url\n          date\n        }\n      }\n    }\n    workExperiences: markdownRemark(\n      frontmatter: { layout: { eq: \"work-experiences\" } }\n    ) {\n      frontmatter {\n        work_experience {\n          position\n          company\n          summary\n          url\n          start_year\n          end_year\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { fileAbsolutePath: { glob: \"**/data/projects/*.md\" } }\n      sort: {\n        fields: [frontmatter___year, frontmatter___title]\n        order: [DESC, ASC]\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            path\n          }\n          frontmatter {\n            short_name\n            company\n            summary\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 200, quality: 100) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    latestBlogPost: allMarkdownRemark(\n      filter: { fileAbsolutePath: { glob: \"**/data/posts/*.md\" } }\n      sort: {\n        fields: [frontmatter___year, frontmatter___title]\n        order: [DESC, ASC]\n      }\n      limit: 1\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            path\n          }\n          frontmatter {\n            title\n            date\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport { css } from '@emotion/core'\n\nexport const blockCss = css`\n  background-color: #fff;\n  border: 1px solid #000;\n  border-radius: 5px;\n`\n\nexport const TextBlock = ({ content, className, children }) => (\n  <div className={`text-justify ${className}`} style={{ fontSize: '13px' }}>\n    {content}\n    {children}\n  </div>\n)\n\nexport const HtmlBlock = ({ body, className, id }) => (\n  <div\n    id={id}\n    className={`text-justify ${className}`}\n    style={{ fontSize: '13px' }}\n    dangerouslySetInnerHTML={{ __html: body }}\n  />\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst query = graphql`\n  query SeoQuery {\n    site {\n      siteMetadata {\n        defaultTitle\n        titleTemplate\n        defaultDescription\n        siteUrl\n        defaultImage\n        twitterUsername\n      }\n    }\n  }\n`\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n          twitterUsername,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${image || defaultImage}`,\n        url: `${siteUrl}${pathname || '/'}`,\n      }\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n              <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n              <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport {\n  Container,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  Collapse,\n} from 'reactstrap'\nimport { css } from '@emotion/core'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n\n  render() {\n    const { siteTitle } = this.props\n    const NavLink = ({ to, name, className, style }) => (\n      <Link\n        to={to}\n        style={{ color: 'white', textDecoration: 'none', ...style }}\n        className={`nav-link ${className}`}\n      >\n        {name}\n      </Link>\n    )\n\n    return (\n      <Navbar\n        expand=\"sm\"\n        dark\n        className=\"sticky-top\"\n        style={{ backgroundColor: 'rebeccapurple' }}\n      >\n        <Container>\n          <Link\n            to=\"/\"\n            className={'navbar-brand'}\n            style={{\n              color: 'white',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n            }}\n          >\n            {siteTitle}\n          </Link>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav\n              className=\"ml-auto\"\n              navbar\n              css={css`\n                li {\n                  margin-bottom: 0;\n                }\n              `}\n            >\n              <NavItem>\n                <NavLink to=\"/\" name=\"About me\" />\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/blog\" name=\"Blog\" />\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport Header from './header'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './layout.css'\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        defaultTitle\n        titleTemplate\n        defaultDescription\n      }\n    }\n  }\n`\n\nconst Main = styled.div`\n  padding-top: 5px;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: { defaultTitle, titleTemplate, defaultDescription },\n      },\n    }) => (\n      <>\n        <Helmet\n          title={defaultTitle}\n          titleTemplate={titleTemplate}\n          meta={[{ name: 'description', content: defaultDescription }]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={defaultTitle} />\n        <Main>{children}</Main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { blockCss } from './block'\n\nexport const Breadcrumb = ({ children }) => (\n  <div className=\"p-2\" css={blockCss}>\n    {children}\n  </div>\n)\nexport const BreadcrumbItem = ({ to, label }) => (\n  <Link to={to} className=\"mx-2\">\n    {label}\n  </Link>\n)\nexport const BreadcrumbActiveItem = ({ label }) => (\n  <span className=\"mx-2\">{label}</span>\n)\n\nexport const breadcrumbGenerator = (active, items) => (\n  <Breadcrumb>\n    {items\n      .filter(item => item.to)\n      .map(({ to, label }, index) => (\n        <span key={index}>\n          <BreadcrumbItem to={to} label={label} /> /{' '}\n        </span>\n      ))}\n    <BreadcrumbActiveItem label={active} />\n  </Breadcrumb>\n)\n","import React, { Component } from 'react'\nimport { Row, Col } from 'reactstrap'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { blockCss } from '../components/block'\n\nclass ProjectSummary extends Component {\n  constructor(props) {\n    super(props)\n    this.toggle = this.toggle.bind(this)\n    this.state = { collapse: false }\n  }\n\n  toggle() {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n\n  render() {\n    const { name, company, url, summary, thumbnail, path } = this.props\n\n    return (\n      <div class=\"my-4\">\n        <Row style={{ fontSize: '14px' }}>\n          <Col md=\"4\">\n            <Img\n              fluid={thumbnail.fluid}\n              className=\"rounded img-thumbnail\"\n              alt={`Project ${name}`}\n            />\n          </Col>\n          <Col md=\"8\">\n            <h5>{name}</h5>\n            <a href={url}>\n              <h6>{company}</h6>\n            </a>\n            <p>\n              {summary}\n              &nbsp;\n              <Link\n                to={path}\n                style={{ color: 'black', fontFamily: 'monospace' }}\n              >\n                [>>]\n              </Link>\n            </p>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default ({ entries }) => {\n  const parsedEntries = entries.map(({ node }, index) => (\n    <ProjectSummary\n      key={index}\n      name={node.frontmatter.short_name}\n      company={node.frontmatter.company}\n      url={node.frontmatter.url}\n      summary={node.frontmatter.summary}\n      thumbnail={node.frontmatter.thumbnail.childImageSharp}\n      path={node.fields.path}\n    />\n  ))\n\n  return (\n    <div className=\"p-3 mt-2\" css={blockCss}>\n      <h4>Projects</h4>\n      {parsedEntries}\n    </div>\n  )\n}\n"],"sourceRoot":""}