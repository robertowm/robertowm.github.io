{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","description","pathname","reactstrap__WEBPACK_IMPORTED_MODULE_2__","class","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","SEO","image","article","gatsby__WEBPACK_IMPORTED_MODULE_4__","_ref2","_ref2$site$siteMetada","site","siteMetadata","defaultTitle","titleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","property","_public_static_d_3972928183_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","Header","_this","_Component","call","this","toggle","bind","_assertThisInitialized","state","isOpen","setState","siteTitle","NavLink","to","className","style","core_browser_esm","gatsby_browser_entry","assign","color","textDecoration","Navbar","expand","dark","backgroundColor","Container","whiteSpace","overflow","textOverflow","NavbarToggler","onClick","Collapse","navbar","Nav","css","header_ref","NavItem","Component","Main","styled_base_browser_esm","target","styles","Layout","react_default","Helmet_default","meta","lang","header","_2269548548","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"+IAmBeA,UAdM,kBACnBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,EAAD,CACEC,MAAO,YACPC,YAAW,2BACXC,SAAU,SAEZN,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,CAAWC,MAAM,SACfR,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,qOCAmBS,QAAOC,YAE1BC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,OACzDC,EAAYH,EACdA,EAAKA,KACLD,EAAgBE,IAAUF,EAAgBE,GAAOD,KAErD,OACEjB,OAAAC,EAAA,EAAAD,CAACqB,EAAAC,EAAMC,SAAP,KACGH,GAAaD,EAAOC,IACnBA,GAAapB,OAAAC,EAAA,EAAAD,CAAA,qCAKrB,IAAMwB,EAAc,SAAAC,GAAS,IACnBR,EAAkCQ,EAAlCR,KAAMC,EAA4BO,EAA5BP,MAAOC,EAAqBM,EAArBN,OAAQO,EAAaD,EAAbC,SAE7B,OACE1B,OAAAC,EAAA,EAAAD,CAACW,EAAmBgB,SAApB,KACG,SAAAX,GAAe,OACdhB,OAAAC,EAAA,EAAAD,CAACc,EAAD,CACEG,KAAMA,EACNC,MAAOA,EACPC,OAAQA,GAAUO,EAClBV,gBAAiBA,4BCzC3B,IAAsBY,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCoBzCK,EAAM,SAAAlB,GAAA,IAAGX,EAAHW,EAAGX,MAAOC,EAAVU,EAAUV,YAAa6B,EAAvBnB,EAAuBmB,MAAO5B,EAA9BS,EAA8BT,SAAU6B,EAAxCpB,EAAwCoB,QAAxC,OACVnC,OAAAC,EAAA,EAAAD,CAACoC,EAAA,EAAD,CACElB,MAjBO,aAkBPC,OAAQ,SAAAkB,GAWF,IAAAC,EAAAD,EAVJE,KACEC,aACEC,EAQAH,EARAG,aACAC,EAOAJ,EAPAI,cACAC,EAMAL,EANAK,mBACAC,EAKAN,EALAM,QACAC,EAIAP,EAJAO,aACAC,EAGAR,EAHAQ,gBAIEC,EAAM,CACV3C,MAAOA,GAASqC,EAChBpC,YAAaA,GAAesC,EAC5BT,MAAK,GAAKU,GAAUV,GAASW,GAC7BG,IAAG,GAAKJ,GAAUtC,GAAY,MAGhC,OACEN,OAAAC,EAAA,EAAAD,CAAAiD,EAAA3B,EAAAC,SAAA,KACEvB,OAAAC,EAAA,EAAAD,CAACkD,EAAA5B,EAAD,CAAQlB,MAAO2C,EAAI3C,MAAOsC,cAAeA,GACvC1C,OAAAC,EAAA,EAAAD,CAAA,QAAMmD,KAAK,cAAcC,QAASL,EAAI1C,cACtCL,OAAAC,EAAA,EAAAD,CAAA,QAAMmD,KAAK,QAAQC,QAASL,EAAIb,QAE/Ba,EAAIC,KAAOhD,OAAAC,EAAA,EAAAD,CAAA,QAAMqD,SAAS,SAASD,QAASL,EAAIC,OAC/Cb,EAAiB,KACjBnC,OAAAC,EAAA,EAAAD,CAAA,QAAMqD,SAAS,UAAUD,QAAQ,YAElCL,EAAI3C,OAASJ,OAAAC,EAAA,EAAAD,CAAA,QAAMqD,SAAS,WAAWD,QAASL,EAAI3C,QACpD2C,EAAI1C,aACHL,OAAAC,EAAA,EAAAD,CAAA,QAAMqD,SAAS,iBAAiBD,QAASL,EAAI1C,cAE9C0C,EAAIb,OAASlC,OAAAC,EAAA,EAAAD,CAAA,QAAMqD,SAAS,WAAWD,QAASL,EAAIb,QAErDlC,OAAAC,EAAA,EAAAD,CAAA,QAAMmD,KAAK,eAAeC,QAAQ,wBACjCN,GACC9C,OAAAC,EAAA,EAAAD,CAAA,QAAMmD,KAAK,kBAAkBC,QAASN,IAEvCC,EAAI3C,OAASJ,OAAAC,EAAA,EAAAD,CAAA,QAAMmD,KAAK,gBAAgBC,QAASL,EAAI3C,QACrD2C,EAAI1C,aACHL,OAAAC,EAAA,EAAAD,CAAA,QAAMmD,KAAK,sBAAsBC,QAASL,EAAI1C,cAE/C0C,EAAIb,OAASlC,OAAAC,EAAA,EAAAD,CAAA,QAAMmD,KAAK,gBAAgBC,QAASL,EAAIb,WA7ChEjB,KAAAqC,KAqDarB,MAUfA,EAAIsB,aAAe,CACjBnD,MAAO,KACPC,YAAa,KACb6B,MAAO,KACP5B,SAAU,KACV6B,SAAS,sOCJIqB,sBAxEb,SAAAA,EAAY/B,GAAO,IAAAgC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMnC,IAANmC,MAEKC,OAASJ,EAAKI,OAAOC,8HAAZC,CAAAN,IACdA,EAAKO,MAAQ,CACXC,QAAQ,GALOR,oHASnBI,OAAA,WACED,KAAKM,SAAS,CACZD,QAASL,KAAKI,MAAMC,YAIxB9C,OAAA,WAAS,IACCgD,EAAcP,KAAKnC,MAAnB0C,UACFC,EAAU,SAAA/B,GAAA,IAAGgC,EAAHhC,EAAGgC,GAAIlB,EAAPd,EAAOc,KAAMmB,EAAbjC,EAAaiC,UAAWC,EAAxBlC,EAAwBkC,MAAxB,OACdvE,OAAAwE,EAAA,EAAAxE,CAACyE,EAAA,EAAD,CACEJ,GAAIA,EACJE,MAAKvE,OAAA0E,OAAA,CAAIC,MAAO,QAASC,eAAgB,QAAWL,GACpDD,UAAS,YAAcA,GAEtBnB,IAIL,OACEnD,OAAAwE,EAAA,EAAAxE,CAAC6E,EAAA,EAAD,CACEC,OAAO,KACPC,MAAI,EACJT,UAAU,aACVC,MAAO,CAAES,gBAAiB,kBAE1BhF,OAAAwE,EAAA,EAAAxE,CAACiF,EAAA,EAAD,KACEjF,OAAAwE,EAAA,EAAAxE,CAACyE,EAAA,EAAD,CACEJ,GAAG,IACHC,UAAW,eACXC,MAAO,CACLI,MAAO,QACPO,WAAY,SACZC,SAAU,SACVC,aAAc,aAGfjB,GAEHnE,OAAAwE,EAAA,EAAAxE,CAACqF,EAAA,EAAD,CAAeC,QAAS1B,KAAKC,SAC7B7D,OAAAwE,EAAA,EAAAxE,CAACuF,EAAA,EAAD,CAAUtB,OAAQL,KAAKI,MAAMC,OAAQuB,QAAM,GACzCxF,OAAAwE,EAAA,EAAAxE,CAACyF,EAAA,EAAD,CACEnB,UAAU,UACVkB,QAAM,EACNE,IAAGC,GAMH3F,OAAAwE,EAAA,EAAAxE,CAAC4F,EAAA,EAAD,KACE5F,OAAAwE,EAAA,EAAAxE,CAACoE,EAAD,CAASC,GAAG,IAAIlB,KAAK,cAEvBnD,OAAAwE,EAAA,EAAAxE,CAAC4F,EAAA,EAAD,KACE5F,OAAAwE,EAAA,EAAAxE,CAACoE,EAAD,CAASC,GAAG,QAAQlB,KAAK,kBA/DpB0C,aCWfC,iBAAI9F,OAAA+F,EAAA,EAAA/F,CAAA,OAAAgG,OAAA,YAAAhG,CAAA,CAAAmD,KAAA,SAAA8C,OAAA,sBA+BKC,IA3BA,SAAAnF,GAAA,IAAGW,EAAHX,EAAGW,SAAH,OACb1B,OAAAwE,EAAA,EAAAxE,CAACyE,EAAA,EAAD,CACEvD,MAlBO,aAmBPC,OAAQ,SAAAkB,GAAA,IAAAC,EAAAD,EACNE,KACEC,aAAgBC,EAFZH,EAEYG,aAAcC,EAF1BJ,EAE0BI,cAAeC,EAFzCL,EAEyCK,mBAFzC,OAKN3C,OAAAwE,EAAA,EAAAxE,CAAAmG,EAAA7E,EAAAC,SAAA,KACEvB,OAAAwE,EAAA,EAAAxE,CAACoG,EAAA9E,EAAD,CACElB,MAAOqC,EACPC,cAAeA,EACf2D,KAAM,CAAC,CAAElD,KAAM,cAAeC,QAAST,KAEvC3C,OAAAwE,EAAA,EAAAxE,CAAA,QAAMsG,KAAK,QAEbtG,OAAAwE,EAAA,EAAAxE,CAACuG,EAAD,CAAQpC,UAAW1B,IACnBzC,OAAAwE,EAAA,EAAAxE,CAAC8F,EAAD,KAAOpE,KAhBbT,KAAAuF,0aCNaC,UAjBU,SAAA1F,GAAiC,IAA9B2F,EAA8B3F,EAA9B2F,SAAUC,EAAoB5F,EAApB4F,cACpC,OAAKA,EAGE/F,IAAMgG,cAAcC,IAApB7G,OAAA0E,OAAA,CACLgC,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-404-js-9438de6da6859fb4af2a.js","sourcesContent":["import React from 'react'\nimport { Container } from 'reactstrap'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO\n      title={'Not Found'}\n      description={`This page doesn't exist.`}\n      pathname={'/404'}\n    />\n    <Container class=\"fluid\">\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Container>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst query = graphql`\n  query SeoQuery {\n    site {\n      siteMetadata {\n        defaultTitle\n        titleTemplate\n        defaultDescription\n        siteUrl\n        defaultImage\n        twitterUsername\n      }\n    }\n  }\n`\n\nconst SEO = ({ title, description, image, pathname, article }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: {\n          defaultTitle,\n          titleTemplate,\n          defaultDescription,\n          siteUrl,\n          defaultImage,\n          twitterUsername,\n        },\n      },\n    }) => {\n      const seo = {\n        title: title || defaultTitle,\n        description: description || defaultDescription,\n        image: `${siteUrl}${image || defaultImage}`,\n        url: `${siteUrl}${pathname || '/'}`,\n      }\n\n      return (\n        <>\n          <Helmet title={seo.title} titleTemplate={titleTemplate}>\n            <meta name=\"description\" content={seo.description} />\n            <meta name=\"image\" content={seo.image} />\n\n            {seo.url && <meta property=\"og:url\" content={seo.url} />}\n            {(article ? true : null) && (\n              <meta property=\"og:type\" content=\"article\" />\n            )}\n            {seo.title && <meta property=\"og:title\" content={seo.title} />}\n            {seo.description && (\n              <meta property=\"og:description\" content={seo.description} />\n            )}\n            {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            {twitterUsername && (\n              <meta name=\"twitter:creator\" content={twitterUsername} />\n            )}\n            {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n            {seo.description && (\n              <meta name=\"twitter:description\" content={seo.description} />\n            )}\n            {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n          </Helmet>\n        </>\n      )\n    }}\n  />\n)\n\nexport default SEO\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  pathname: null,\n  article: false,\n}\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport {\n  Container,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  Collapse,\n} from 'reactstrap'\nimport { css } from '@emotion/core'\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false,\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    })\n  }\n\n  render() {\n    const { siteTitle } = this.props\n    const NavLink = ({ to, name, className, style }) => (\n      <Link\n        to={to}\n        style={{ color: 'white', textDecoration: 'none', ...style }}\n        className={`nav-link ${className}`}\n      >\n        {name}\n      </Link>\n    )\n\n    return (\n      <Navbar\n        expand=\"sm\"\n        dark\n        className=\"sticky-top\"\n        style={{ backgroundColor: 'rebeccapurple' }}\n      >\n        <Container>\n          <Link\n            to=\"/\"\n            className={'navbar-brand'}\n            style={{\n              color: 'white',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n            }}\n          >\n            {siteTitle}\n          </Link>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav\n              className=\"ml-auto\"\n              navbar\n              css={css`\n                li {\n                  margin-bottom: 0;\n                }\n              `}\n            >\n              <NavItem>\n                <NavLink to=\"/\" name=\"About me\" />\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/blog\" name=\"Blog\" />\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport Header from './header'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './layout.css'\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        defaultTitle\n        titleTemplate\n        defaultDescription\n      }\n    }\n  }\n`\n\nconst Main = styled.div`\n  padding-top: 5px;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={query}\n    render={({\n      site: {\n        siteMetadata: { defaultTitle, titleTemplate, defaultDescription },\n      },\n    }) => (\n      <>\n        <Helmet\n          title={defaultTitle}\n          titleTemplate={titleTemplate}\n          meta={[{ name: 'description', content: defaultDescription }]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={defaultTitle} />\n        <Main>{children}</Main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}